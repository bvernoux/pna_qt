name: Build pna_qt

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      qt_version:
        description: 'Qt version to use'
        required: true
        default: '6.5.3'

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: "Windows MSVC",
              os: windows-latest,
              compiler: "msvc",
              qt_arch: "win64_msvc2019_64",
              artifact_name: "pna_qt-windows-msvc"
            }
          - {
              name: "Windows MinGW",
              os: windows-latest,
              compiler: "mingw",
              qt_arch: "win64_mingw",
              artifact_name: "pna_qt-windows-mingw"
            }
          - {
              name: "Linux GCC",
              os: ubuntu-latest,
              compiler: "gcc",
              qt_arch: "gcc_64",
              artifact_name: "pna_qt-linux-gcc"
            }

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    # Install dependencies for Linux
    - name: Install Linux dependencies
      if: matrix.config.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgl1-mesa-dev \
          libxkbcommon-x11-0 \
          libpulse-dev \
          libxcb-cursor0 \
          qt6-base-dev \
          qt6-svg-dev
    
    # Set up MSVC environment
    - name: Set up MSVC
      if: matrix.config.os == 'windows-latest' && matrix.config.compiler == 'msvc'
      uses: ilammy/msvc-dev-cmd@v1
    
    # Set up MinGW environment
    - name: Set up MinGW
      if: matrix.config.os == 'windows-latest' && matrix.config.compiler == 'mingw'
      uses: egor-tensin/setup-mingw@v2
      with:
        platform: x64
    
    # Install Qt on Windows
    - name: Install Qt on Windows
      if: matrix.config.os == 'windows-latest'
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.3'
        host: 'windows'
        target: 'desktop'
        arch: ${{ matrix.config.compiler == 'msvc' && 'win64_msvc2019_64' || 'win64_mingw' }}
        tools: ${{ matrix.config.compiler == 'mingw' && 'tools_mingw' || '' }}
    
    # Windows MSVC Build
    - name: Build with MSVC
      if: matrix.config.os == 'windows-latest' && matrix.config.compiler == 'msvc'
      shell: cmd
      run: |
        qmake pna_qt.pro CONFIG+=release
        nmake
        mkdir deploy
        copy release\pna_qt.exe deploy\
        windeployqt --release --no-translations --no-system-d3d-compiler deploy\pna_qt.exe
    
    # Windows MinGW Build
    - name: Build with MinGW
      if: matrix.config.os == 'windows-latest' && matrix.config.compiler == 'mingw'
      shell: cmd
      run: |
        set PATH=%PATH%;%Qt6_DIR%\bin
        qmake pna_qt.pro CONFIG+=release
        mingw32-make
        mkdir deploy
        copy release\pna_qt.exe deploy\
        windeployqt --release --no-translations --no-system-d3d-compiler deploy\pna_qt.exe
    
    # Linux Build
    - name: Build on Linux
      if: matrix.config.os == 'ubuntu-latest'
      run: |
        export QT_SELECT=qt6
        qmake6 pna_qt.pro CONFIG+=release
        make -j$(nproc)
        mkdir -p deploy
        cp pna_qt deploy/
    
    # Upload artifacts
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.config.artifact_name }}
        path: deploy/
